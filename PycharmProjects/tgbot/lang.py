import random
import telebot
from telebot import types
import webbrowser
import wikipediaapi
from googletrans import Translator

TOKEN = "6326052098:AAEhwesJOT3Y14_9Pu8VfL_iykx6-eAkm-E"
bot = telebot.TeleBot(TOKEN)


user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0"
headers = {'User-Agent': user_agent}
wiki_wiki = wikipediaapi.Wikipedia('en', headers=headers)


import requests


def get_book_quote():
    try:
        response = requests.get("https://api.quotable.io/random")
        if response.status_code == 200:
            data = response.json()
            return f'"{data["content"]}" - {data["author"]}'
        else:
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–∏—Ç–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {str(e)}"

@bot.message_handler(commands=['—Ü–∏—Ç–∞—Ç–∞'])
def send_quote(message):
    quote = get_book_quote()
    bot.send_message(message.chat.id, quote)


translator = Translator()

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    markup.add(types.KeyboardButton('–í–∏–∫–∏'))
    markup.add(types.KeyboardButton('–ß–∞—Ç –ñ–ü–¢'))
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∏—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏ –∏–ª–∏ –ø–æ–º–æ—á—å –≤–∞–º –≤—Å—Ç—É–ø–∏—Ç—å –≤ –ñ–ü–¢. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é:", reply_markup=markup)

@bot.message_handler(func=lambda message: message.text.lower() == '–≤–∏–∫–∏')
def handle_wikipedia_search(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏:')
    bot.register_next_step_handler(message, process_wikipedia_query)

def process_wikipedia_query(message):
    search_query = message.text
    page = wiki_wiki.page(search_query)

    if page.exists():
        bot.send_message(message.chat.id, page.text[:4096])  # –û–≥—Ä–∞–Ω–∏—á–∏–º –æ—Ç–≤–µ—Ç –ø–æ –¥–ª–∏–Ω–µ
    else:
        bot.send_message(message.chat.id, f'–ü–æ –∑–∞–ø—Ä–æ—Å—É "{search_query}" –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏.')

@bot.message_handler(func=lambda message: message.text.lower() == '—á–∞—Ç –∂–ø—Ç')
def handle_jpt_chat(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –ñ–∏–≤–æ–º—É –ü–∞—Ä–æ–≤–æ–∑–Ω–æ–º—É –¢—Ä–∞—Ñ–∏–∫—É (–ñ–ü–¢) –∏ –æ–±—â–∞–π—Ç–µ—Å—å —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏! –ü—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: @gigachat_bot')

@bot.message_handler(func=lambda message: message.text.lower() == '–µ—â–µ –ø–æ–∏—Å–∫')
def handle_search(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:')
    bot.register_next_step_handler(message, process_search_query)

def process_search_query(message):
    search_query = message.text
    search_url = f'https://www.google.com/search?q={search_query}'
    webbrowser.open(search_url)
    bot.send_message(message.chat.id, f'–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {search_query}. –û–∂–∏–¥–∞–π—Ç–µ, –≤–∞—à –±—Ä–∞—É–∑–µ—Ä —Å–∫–æ—Ä–æ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è.')

def translate_text(text):
    try:
        translated_text = translator.translate(text, dest='ru').text
        return translated_text
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ: {str(e)}"

@bot.message_handler(commands=['translate'])
def translate_message(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞:')
    bot.register_next_step_handler(message, process_translation)

def process_translation(message):
    text = message.text
    translated_text = translate_text(text)
    bot.send_message(message.chat.id, f"–ü–µ—Ä–µ–≤–æ–¥: {translated_text}")


@bot.message_handler(func=lambda message: message.text == 'üëæ')
def handle_games(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ')
    button2 = types.KeyboardButton('–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
    button3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')

    markup.row(button1)
    markup.row(button2)
    markup.row(button3)

    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –∏–≥—Ä! –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:', reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ')
def handle_guess_number_game(message):
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"!\n–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–≥–∞–¥–∞—Ç—å –µ–≥–æ!')

    # —Å–∞–Ω —Ç–∞–±–∞–º
    secret_number = random.randint(1, 100)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def check_guess(msg, secret):
        try:
            guess = int(msg.text)
            if guess == secret:
                bot.send_message(msg.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ {secret}!')
            elif guess < secret:
                bot.send_message(msg.chat.id, '–ù–µ—Ç, –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ.')
                # –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ, –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏
                bot.register_next_step_handler(msg, lambda m: check_guess(m, secret))
            else:
                bot.send_message(msg.chat.id, '–ù–µ—Ç, –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ.')
                # –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏ —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ, –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏
                bot.register_next_step_handler(msg, lambda m: check_guess(m, secret))
        except ValueError:
            bot.send_message(msg.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.')

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏
    bot.register_next_step_handler(message, lambda m: check_guess(m, secret_number))

@bot.message_handler(func=lambda message: message.text == '–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
def handle_quiz_game(message):
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞"!')

    questions_answers = {
        '–°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–µ—Ç –≤ —Å–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?': '8',
        '–ö–∞–∫–æ–π —Ö–∏–º–∏—á–µ—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ –≤ —Ç–∞–±–ª–∏—Ü–µ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤?': '–í–æ–¥–æ—Ä–æ–¥',
        '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å—Ç–æ–ª–∏—Ü–∞ –§—Ä–∞–Ω—Ü–∏–∏?': '–ü–∞—Ä–∏–∂',
        '–ö–∞–∫–æ–π —Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –≥–æ—Ä–Ω—ã–π —Ö—Ä–µ–±–µ—Ç –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ –ó–µ–º–ª—è?': '–ì–∏–º–∞–ª–∞–∏',
        '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∞–ø–ø–∞—Ä–∞—Ç, –∑–∞–ø—É—â–µ–Ω–Ω—ã–π –°–°–°–† –≤ 1957 –≥–æ–¥—É?': '–°–ø—É—Ç–Ω–∏–∫'
    }

    def start_quiz(msg, qa):
        question = random.choice(list(qa.keys()))
        bot.send_message(msg.chat.id, question)
        bot.register_next_step_handler(msg, lambda m: check_answer(m, qa, question))

    def check_answer(msg, qa, question):
        user_answer = msg.text.strip()
        correct_answer = qa[question]
        if user_answer.lower() == correct_answer.lower():
            bot.send_message(msg.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
            # –ü–æ—Å–ª–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
            del qa[question]
            if qa:
                start_quiz(msg, qa)
            else:
                bot.send_message(msg.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.')
        else:
            bot.send_message(msg.chat.id, f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}')
            # –ü–æ—Å–ª–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
            start_quiz(msg, qa)

    start_quiz(message, questions_answers)

# –í–∞—à –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥...


@bot.message_handler(func=lambda message: message.text.lower() == '–≤–∏–∫–∏')
def handle_wikipedia_search(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏:')
    bot.register_next_step_handler(message, process_wikipedia_query)

def process_wikipedia_query(message):
    search_query = message.text
    page_py = wiki_wiki.page(search_query)

    if page_py.exists():
        # –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        bot.send_message(message.chat.id, page_py.text[:4096])  # –û–≥—Ä–∞–Ω–∏—á–∏–º –æ—Ç–≤–µ—Ç –ø–æ –¥–ª–∏–Ω–µ
    else:
        bot.send_message(message.chat.id, f'–ü–æ –∑–∞–ø—Ä–æ—Å—É "{search_query}" –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏.')



# –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–∏—Å–∫"
@bot.message_handler(func=lambda message: message.text.lower() == '–µ—â–µ –ø–æ–∏—Å–∫')
def handle_search(message):
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞ –≤ –±—Ä–∞—É–∑–µ—Ä
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:')
    bot.register_next_step_handler(message, process_search_query)

def process_search_query(message):
    search_query = message.text
    search_url = f'https://www.google.com/search?q={search_query}'
    webbrowser.open(search_url)
    bot.send_message(message.chat.id, f'–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {search_query}. –û–∂–∏–¥–∞–π—Ç–µ, –≤–∞—à –±—Ä–∞—É–∑–µ—Ä —Å–∫–æ—Ä–æ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è.')

# –í–∞—à —Ç–µ–∫—É—â–∏–π –∫–æ–¥...

answers = ['–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–∫–∞–∑–∞—Ç—å.', '–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é.', '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã.', '–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –≥–æ–≤–æ—Ä–∏–ª, —á—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å –≤ —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏... >_<']


# –î–æ–±–∞–≤–∏–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∏–ª—å–º—ã –≤ —Å–ª–æ–≤–∞—Ä—å movie_links
movie_links = {
    '–§–∏–ª—å–º #1': 'https://zetflixhdcm17.kinos.cam/serial/23112872~%D0%91%D0%B5%D1%81%D0%BF%D0%BE%D1%89%D0%B0%D0%B4%D0%BD%D1%8B%D0%B9',
    '–§–∏–ª—å–º #2': 'https://zetflixhdcm17.kinos.cam/film/23116072~%D0%9A%D0%B0%D0%BF%D0%B8%D1%82%D0%B0%D0%BD+%D0%9C%D0%B8%D0%BB%D0%BB%D0%B5%D1%80',
    '–§–∏–ª—å–º #3': 'https://zetflixhdcm17.kinos.cam/film/23117476~%D0%92%D0%B7%D1%80%D0%BE%D1%81%D0%BB%D1%8B%D0%B5+%D0%BD%D0%B5+%D0%B7%D0%BD%D0%B0%D1%8E%D1%82',
    '–§–∏–ª—å–º #4': 'https://zetflixhdcm17.kinos.cam/film/23115136~%D0%A1%D0%BF%D1%80%D0%B8%D0%BD%D0%B3-%D0%9B%D1%8D%D0%B9%D0%BA%D1%81',
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥—Ä—É–≥–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
# ...

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å–º–∞
@bot.message_handler(func=lambda message: message.text.startswith('–§–∏–ª—å–º #'))
def handle_movie_choice(message):
    # –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞
    movie_number = message.text.split('#')[-1].strip()
    movie_link = movie_links.get(f'–§–∏–ª—å–º #{movie_number}', '–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')

    if movie_link != '–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.':
        bot.send_message(message.from_user.id, f'–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –§–∏–ª—å–º–∞ #{movie_number}: {movie_link}')
    else:
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∏–ª—å–º.')

# –í–∞—à —Ç–µ–∫—É—â–∏–π –∫–æ–¥...

photo_links = {
    'üîπ –¢–æ–≤–∞—Ä #1': 'https://avatars.dzeninfra.ru/get-zen_doc/1889318/pub_5f872f3a17c9884cd30be8c0_5f872faeaa68813be1771c8e/scale_1200',
    'üîπ –¢–æ–≤–∞—Ä #2': 'https://i.ytimg.com/vi/gfvqRBQk7vw/maxresdefault_live.jpg',
    'üîπ –¢–æ–≤–∞—Ä #3': 'https://cdn2.mygazeta.com/i/2017/08/maxresdefault1.jpg',
    'üîπ –¢–æ–≤–∞—Ä #4': 'https://amazingsoftbd.com/wp-content/uploads/2018/10/htmlcss.jpg',
}

product_prices = {
    'üîπ –¢–æ–≤–∞—Ä #1': 45000.000,
    'üîπ –¢–æ–≤–∞—Ä #2': 42000.000,
    'üîπ –¢–æ–≤–∞—Ä #3': 38000.000,
    'üîπ –¢–æ–≤–∞—Ä #4': 55000.000,
}

cart_items = set()

user_carts = {}

def create_payment(total_price):
    return '4400 4300 4444 4444'

def process_payment(payment_id):
    return True

course_links = {
    'üîπ –ö—É—Ä—Å Python': 'https://link-to-python-course',
    'üîπ –ö—É—Ä—Å JavaScript': 'https://link-to-javascript-course',
    'üîπ –ö—É—Ä—Å HTML/CSS': 'https://link-to-html-css-course',
}

course_prices = {
    'üîπ –ö—É—Ä—Å Python': 10000.000,
    'üîπ –ö—É—Ä—Å JavaScript': 12000.000,
    'üîπ –ö—É—Ä—Å HTML/CSS': 8000.000,
}

qr_code_url = 'http://tvoy-bor.ru/image/news/city/2021/10/kod.jpg'
botfather_url = 'https://t.me/botfather'



@bot.message_handler(commands=['start'])
def welcome(message):
    user_id = message.from_user.id
    if user_id not in user_carts:
        user_carts[user_id] = set()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üõç –¢–æ–≤–∞—Ä—ã')
    button2 = types.KeyboardButton('üéì –ö—É—Ä—Å—ã')
    button3 = types.KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    button4 = types.KeyboardButton('üìÑ –°–ø—Ä–∞–≤–∫–∞')
    button5 = types.KeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞')
    button6 = types.KeyboardButton('üëæ')
    button7 = types.KeyboardButton('üé¨ –ö–∏–Ω–æ—Ä—É–º')
    markup.row(button1, button2)
    markup.row(button3, button4)
    markup.row(button5, button7)
    markup.row(button6)

    cart_content = ', '.join(user_carts[user_id]) if user_carts[user_id] else '–ø—É—Å—Ç–∞'
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–£ –º–µ–Ω—è —Ç—ã —Å–º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–≤–∞—Ä—ã, –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å—ã –∏–ª–∏ –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—ã!'
                                      f'\n\n–¢–≤–æ—è –∫–æ—Ä–∑–∏–Ω–∞: {cart_content}', reply_markup=markup)

@bot.message_handler(content_types='photo')
def get_photo(message):
    bot.send_message(message.chat.id, '–£ –º–µ–Ω—è –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ñ–æ—Ç–æ :(')

@bot.message_handler(commands=['photo1', 'photo2', 'photo3', 'photo4'])
def send_product_photos(message):
    command = message.text[1:]
    product_name = f'üîπ –¢–æ–≤–∞—Ä #{command[-1]}'
    send_product_photo(message, product_name)

@bot.message_handler()
def info(message):
    if message.text == 'üõç –¢–æ–≤–∞—Ä—ã':
        goodsChapter(message)
    elif message.text == 'üéì –ö—É—Ä—Å—ã':
        coursesChapter(message)
    elif message.text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        settingsChapter(message)
    elif message.text == 'üìÑ –°–ø—Ä–∞–≤–∫–∞':
        infoChapter(message)
    elif message.text == 'üëæ':
        handle_games(message)
    elif message.text.startswith('üîπ –¢–æ–≤–∞—Ä #'):
        send_product_photo(message, message.text)
    elif message.text == 'üí≥ –ö—É–ø–∏—Ç—å':
        buy_products(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
        goodsChapter(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
        welcome(message)
    elif message.text == 'üîπ –ö—É—Ä—Å Python' or message.text == 'üîπ –ö—É—Ä—Å JavaScript' or message.text == 'üîπ –ö—É—Ä—Å HTML/CSS':
        send_course_info(message)
    elif message.text == 'üí≥ –ö—É–ø–∏—Ç—å –∫—É—Ä—Å':
        buy_course(message)
    elif message.text == 'üõí –ö–æ—Ä–∑–∏–Ω–∞':
        show_cart(message)
    elif message.text.lower() in ["üé¨ –∫–∏–Ω–æ—Ä—É–º", "üé¨–∫–∏–Ω–æ—Ä—É–º", "–∫–∏–Ω–æ—Ä—É–º"]:
        handle_kinoroom_menu(message)
    else:
        bot.send_message(message.chat.id, answers[random.randint(0, 3)])

def goodsChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üîπ –¢–æ–≤–∞—Ä #1')
    button2 = types.KeyboardButton('üîπ –¢–æ–≤–∞—Ä #2')
    button3 = types.KeyboardButton('üîπ –¢–æ–≤–∞—Ä #3')
    button4 = types.KeyboardButton('üîπ –¢–æ–≤–∞—Ä #4')
    button5 = types.KeyboardButton('üí≥ –ö—É–ø–∏—Ç—å')
    button6 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
    markup.row(button1, button2)
    markup.row(button3, button4)
    markup.row(button5, button6)
    bot.send_message(message.chat.id, '–í–æ—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–æ–¥–∞–∂–µ:', reply_markup=markup)

def coursesChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üîπ –ö—É—Ä—Å Python')
    button2 = types.KeyboardButton('üîπ –ö—É—Ä—Å JavaScript')
    button3 = types.KeyboardButton('üîπ –ö—É—Ä—Å HTML/CSS')
    button4 = types.KeyboardButton('üí≥ –ö—É–ø–∏—Ç—å –∫—É—Ä—Å')
    button5 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
    markup.row(button1, button2)
    markup.row(button3, button4)
    markup.row(button5)
    bot.send_message(message.chat.id, '–í–æ—Ç –≤—Å–µ –∫—É—Ä—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è:', reply_markup=markup)

def settingsChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ #1')
    button2 = types.KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ #2')
    button3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
    markup.row(button1, button2)
    markup.row(button3)
    bot.send_message(message.chat.id, '–†–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫.\n–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:', reply_markup=markup)

def infoChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('‚úèÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É')
    button2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
    markup.row(button1, button2)
    bot.send_message(message.chat.id, f'–†–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏.\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –º–æ–µ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.\n–î–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ: {botfather_url}', reply_markup=markup)



def send_product_photo(message, product_name):
    if product_name in photo_links:
        if product_name in cart_items:
            photo_url = photo_links[product_name]
            bot.send_photo(message.chat.id, photo_url, caption=f'–û–ø–∏—Å–∞–Ω–∏–µ {product_name}\n–¢–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ.')
        else:
            photo_url = photo_links[product_name]
            price = product_prices.get(product_name, 0.00)
            bot.send_photo(message.chat.id, photo_url, caption=f'–û–ø–∏—Å–∞–Ω–∏–µ {product_name}\n–¶–µ–Ω–∞: ‚Ç∏{price}\n–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É.')
            cart_items.add(product_name)
    else:
        bot.send_message(message.chat.id, '–§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')

def buy_products(message):
    user_id = message.from_user.id
    if user_id not in user_carts:
        user_carts[user_id] = set()

    if cart_items:
        total_price = sum(product_prices.get(item, 0.00) for item in cart_items)
        payment_id = create_payment(total_price)

        if process_payment(payment_id):
            user_carts[user_id].update(cart_items)
            cart_items.clear()

            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(text='‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª', callback_data='paid'))
            markup.add(types.InlineKeyboardButton(text='‚úñÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel'))

            bot.send_photo(message.chat.id, qr_code_url,
                           caption=f'–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã\nKASPI GOLD\n\n–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã: KASPI\n\n1‚É£ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—á–µ—Ç –Ω–∏–∂–µüëá\n\nüí≥ 4400 4300 4444 4444',
                           reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    else:
        bot.send_message(message.chat.id, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏.')

def send_course_info(message):
    course_name = message.text
    if course_name in course_links:
        if course_name in cart_items:
            course_url = course_links[course_name]
            bot.send_message(message.chat.id, f'–û–ø–∏—Å–∞–Ω–∏–µ {course_name}\n–ö—É—Ä—Å —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ.\n{course_url}')
        else:
            course_url = course_links[course_name]
            price = course_prices.get(course_name, 0.00)
            bot.send_message(message.chat.id, f'–û–ø–∏—Å–∞–Ω–∏–µ {course_name}\n–¶–µ–Ω–∞: ‚Ç∏{price}\n–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É.\n{course_url}')
            cart_items.add(course_name)
    else:
        bot.send_message(message.chat.id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')

def buy_course(message):
    user_id = message.from_user.id
    if user_id not in user_carts:
        user_carts[user_id] = set()

    if cart_items:
        total_price = sum(course_prices.get(item, 0.00) for item in cart_items)
        payment_id = create_payment(total_price)

        if process_payment(payment_id):
            user_carts[user_id].update(cart_items)
            cart_items.clear()

            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(text='‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª', callback_data='paid'))
            markup.add(types.InlineKeyboardButton(text='‚úñÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel'))

            bot.send_photo(message.chat.id, qr_code_url,
                           caption=f'–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã\nKASPI GOLD\n\n–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã: KASPI\n\n1‚É£ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—á–µ—Ç –Ω–∏–∂–µüëá\n\nüí≥ 4400 4300 4444 4444',
                           reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    else:
        bot.send_message(message.chat.id, '–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞. –í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏.')

def show_cart(message):
    user_id = message.from_user.id
def show_cart(message):
    user_id = message.from_user.id
    cart_content = ', '.join(user_carts[user_id]) if user_carts[user_id] else '–ø—É—Å—Ç–∞'
    bot.send_message(message.chat.id, f'–¢–≤–æ—è –∫–æ—Ä–∑–∏–Ω–∞: {cart_content}')

def handle_kinoroom_menu(message):
    # –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∫–∏–Ω–æ—Ä—É–º–∞
    bot.send_message(message.chat.id, '–ö–∏–Ω–æ—Ä—É–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ!')



@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == 'paid':
        bot.send_message(call.message.chat.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!')
    elif call.data == 'cancel':
        bot.send_message(call.message.chat.id, '–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –∑–∞–Ω–æ–≤–æ.')


# –í–∞—à —Ç–µ–∫—É—â–∏–π –∫–æ–¥...

# –î–æ–±–∞–≤–∏–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∏–ª—å–º—ã –≤ —Å–ª–æ–≤–∞—Ä—å movie_links
movie_links = {
    '–§–∏–ª—å–º #1': 'https://zetflixhdcm17.kinos.cam/serial/23112872~%D0%91%D0%B5%D1%81%D0%BF%D0%BE%D1%89%D0%B0%D0%B4%D0%BD%D1%8B%D0%B9',
    '–§–∏–ª—å–º #2': 'https://zetflixhdcm17.kinos.cam/film/23116072~%D0%9A%D0%B0%D0%BF%D0%B8%D1%82%D0%B0%D0%BD+%D0%9C%D0%B8%D0%BB%D0%BB%D0%B5%D1%80',
    '–§–∏–ª—å–º #3': 'https://zetflixhdcm17.kinos.cam/film/23117476~%D0%92%D0%B7%D1%80%D0%BE%D1%81%D0%BB%D1%8B%D0%B5+%D0%BD%D0%B5+%D0%B7%D0%BD%D0%B0%D1%8E%D1%82',
    '–§–∏–ª—å–º #4': 'https://zetflixhdcm17.kinos.cam/film/23115136~%D0%A1%D0%BF%D1%80%D0%B8%D0%BD%D0%B3-%D0%9B%D1%8D%D0%B9%D0%BA%D1%81',
}

# –î–æ–±–∞–≤–∏–º –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã "–ö–∏–Ω–æ—Ä—É–º"
def handle_kinoroom_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('–§–∏–ª—å–º #1')
    button2 = types.KeyboardButton('–§–∏–ª—å–º #2')
    button3 = types.KeyboardButton('–§–∏–ª—å–º #3')
    button4 = types.KeyboardButton('–§–∏–ª—å–º #4')
    button5 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')

    markup.row(button1, button2)
    markup.row(button3, button4)
    markup.row(button5)

    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–∏–Ω–æ—Ä—É–º! –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text.startswith('–§–∏–ª—å–º #'))
def handle_movie_choice(message):

    movie_number = message.text.split('#')[-1].strip()
    movie_link = movie_links.get(f'–§–∏–ª—å–º #{movie_number}', '–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')

    if movie_link != '–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.':
        bot.send_message(message.from_user.id, f'–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –§–∏–ª—å–º–∞ #{movie_number}: {movie_link}')
    else:
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∏–ª—å–º.')




if __name__ == '__main__':
    bot.polling(none_stop=True)